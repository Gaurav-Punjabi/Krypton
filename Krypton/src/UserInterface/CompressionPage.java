/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import EventHandling.EventHandling;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.iharder.dnd.FileDrop;

/**
 *
 * @author gauravpunjabi
 */
public class CompressionPage extends javax.swing.JFrame implements Constants{

    /**
     * Creates new form MainPage
     */
    public CompressionPage() {
        initComponents();
        
        jlBlur.setVisible(false);
        jpSideBar.setLocation(-240,0);
        loadingPanel = new Encrypting();
        loadingTimer = new Timer(2600,new LoadingAction());
        loadingTimer.setRepeats(false);
        eventHandling = new EventHandling(this);
        sideBarTimer = new Timer(7,new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae)
            {
                if(isSideBarOpen)
                    sideBarCloseAction();
                else
                    sideBarOpenAction();
            }
        });
        
        //Adding the File Droppable Component
        fileDrop = new FileDrop(this, new FileDrop.Listener() {
            @Override
            public void filesDropped(File[] files) {
                receivedFiles(files);
            }
        });
        
    }
    private void receivedFiles(File[] files) {
        this.selectedFile = files[0];
        this.jtfBrowse.setText(files[0].getAbsolutePath());
    }
    private void sideBarOpenAction()
    {
        jpSideBar.setLocation(jpSideBar.getLocation().x + 10,0);
        if(jpSideBar.getLocation().x == 0)
        {
            jlBlur.setVisible(true);
            sideBarTimer.stop();
            isSideBarOpen = true;
        }
    }
    private void sideBarCloseAction()
    {
        jpSideBar.setLocation(jpSideBar.getLocation().x - 10,0);
        if(jpSideBar.getLocation().x == -240)
        {
            jlBlur.setVisible(false);
            sideBarTimer.stop();
            isSideBarOpen = false;
        }
    }
    private class LoadingAction implements ActionListener
    {
        @Override
        public void actionPerformed(ActionEvent ae)
        {
            loadingPanel.setVisible(false);
            setVisible(true);
            setLocation(loadingPanel.getLocation().x,loadingPanel.getLocation().y);
        }
    }
            
    private void close()
    {
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));   
    }
    
    private void loadingAnimation(String title)
    {
        loadingTimer.start();
        loadingPanel.setTitle(title);
        this.setVisible(false);
        loadingPanel.setLocation(this.getLocation().x,this.getLocation().y);
        loadingPanel.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        jlBlur = new javax.swing.JLabel();
        jpSideBar = new javax.swing.JPanel()
        ;
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jlEncryption = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jlSideBarClose = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlSideBar = new javax.swing.JLabel();
        jtfBrowse = new javax.swing.JTextField();
        jsBrowse = new javax.swing.JSeparator();
        jbBrowse = new javax.swing.JButton();
        jbDecrypt = new javax.swing.JButton();
        jbEncrypt = new javax.swing.JButton();
        jlCross = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlStatistics = new javax.swing.JLabel();

        jlBlur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/BlurBackground.png"))); // NOI18N

        jpSideBar.setBackground(new java.awt.Color(255, 255, 255));
        jpSideBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Raleway", 1, 29)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(86, 61, 124));
        jLabel1.setText("Krypton");
        jpSideBar.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 310, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(86, 61, 124));
        jLabel2.setText("  AES (256 - Bit)");
        jpSideBar.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 175, 240, 52));

        jSeparator2.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 310, -1));

        jlEncryption.setBackground(new java.awt.Color(255, 255, 255));
        jlEncryption.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jlEncryption.setForeground(new java.awt.Color(86, 61, 124));
        jlEncryption.setText("  DES (64  -  Bit)");
        jlEncryption.setOpaque(true);
        jlEncryption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jlEncryptionMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlEncryptionMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlEncryptionMouseEntered(evt);
            }
        });
        jpSideBar.add(jlEncryption, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 75, 240, 52));

        jSeparator3.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 310, -1));

        jLabel4.setBackground(new java.awt.Color(100, 64, 124));
        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("  AES (128 - Bit)");
        jLabel4.setOpaque(true);
        jpSideBar.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 125, 240, 52));

        jSeparator4.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 310, -1));

        jSeparator5.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 310, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(86, 61, 124));
        jLabel5.setText("Sign Out");
        jpSideBar.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 280, -1));

        jSeparator6.setBackground(new java.awt.Color(86, 61, 124));
        jpSideBar.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 310, -1));

        jlSideBarClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/back.png"))); // NOI18N
        jlSideBarClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlSideBarCloseMouseClicked(evt);
            }
        });
        jpSideBar.add(jlSideBarClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 26, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setShape(new RoundRectangle2D.Double(0,0,800,550,30,30));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(86, 61, 124));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(null);

        jlSideBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/krypton_2.png"))); // NOI18N
        jlSideBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlSideBarMouseClicked(evt);
            }
        });
        jPanel1.add(jlSideBar);
        jlSideBar.setBounds(10, 10, 32, 32);

        jtfBrowse.setBackground(new java.awt.Color(86, 61, 124));
        jtfBrowse.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        jtfBrowse.setForeground(new java.awt.Color(236, 240, 241));
        jtfBrowse.setText("C:/Users/Desktop/Somefile/Krypton/Des.krypt");
        jtfBrowse.setBorder(null);
        jtfBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfBrowseActionPerformed(evt);
            }
        });
        jPanel1.add(jtfBrowse);
        jtfBrowse.setBounds(80, 420, 490, 40);

        jsBrowse.setBackground(new java.awt.Color(236, 240, 241));
        jsBrowse.setForeground(new java.awt.Color(236, 240, 241));
        jPanel1.add(jsBrowse);
        jsBrowse.setBounds(80, 460, 500, 20);

        jbBrowse.setBackground(new java.awt.Color(86, 61, 124));
        jbBrowse.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jbBrowse.setForeground(new java.awt.Color(236, 240, 241));
        jbBrowse.setText("Browse");
        jbBrowse.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jbBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBrowseActionPerformed(evt);
            }
        });
        jPanel1.add(jbBrowse);
        jbBrowse.setBounds(600, 420, 120, 40);

        jbDecrypt.setBackground(new java.awt.Color(86, 61, 124));
        jbDecrypt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jbDecrypt.setForeground(new java.awt.Color(236, 240, 241));
        jbDecrypt.setText("Decompress");
        jbDecrypt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jbDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDecryptActionPerformed(evt);
            }
        });
        jPanel1.add(jbDecrypt);
        jbDecrypt.setBounds(600, 490, 120, 40);

        jbEncrypt.setBackground(new java.awt.Color(86, 61, 124));
        jbEncrypt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jbEncrypt.setForeground(new java.awt.Color(236, 240, 241));
        jbEncrypt.setText("Compress");
        jbEncrypt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jbEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEncryptActionPerformed(evt);
            }
        });
        jPanel1.add(jbEncrypt);
        jbEncrypt.setBounds(460, 490, 120, 40);

        jlCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/images/cancel.png"))); // NOI18N
        jlCross.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlCrossMouseClicked(evt);
            }
        });
        jPanel1.add(jlCross);
        jlCross.setBounds(756, 10, 32, 32);

        jLabel3.setFont(new java.awt.Font("Fira Sans", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Compression");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(250, 10, 300, 110);

        jLabel7.setFont(new java.awt.Font("Fira Sans", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Need some space? Try using krypton for that.");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(170, 110, 540, 60);

        jlStatistics.setFont(new java.awt.Font("Fira Sans", 0, 24)); // NOI18N
        jlStatistics.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jlStatistics);
        jlStatistics.setBounds(80, 270, 430, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public JLabel getStatisticsLabel() {
        return this.jlStatistics;
    }
    private void jtfBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfBrowseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfBrowseActionPerformed

    private void jlCrossMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCrossMouseClicked
        close();
    }//GEN-LAST:event_jlCrossMouseClicked

    private void jbEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEncryptActionPerformed
        this.eventHandling.compress(this.selectedFile);
        loadingAnimation("Compress");
    }//GEN-LAST:event_jbEncryptActionPerformed

    private void jbDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDecryptActionPerformed
        loadingAnimation("Decompress");
        this.eventHandling.decompress(this.selectedFile);
    }//GEN-LAST:event_jbDecryptActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked

    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        this.setLocation(evt.getXOnScreen()-x,evt.getYOnScreen()-y);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jbBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBrowseActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new FileNameExtensionFilter(null,"txt"));
        jfc.showOpenDialog(this);
        File selectedFile = jfc.getSelectedFile();
        if(selectedFile != null)
        {
            jtfBrowse.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jbBrowseActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        this.x = evt.getX();
        this.y = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jlSideBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlSideBarMouseClicked
        sideBarTimer.start();
    }//GEN-LAST:event_jlSideBarMouseClicked

    private void jlSideBarCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlSideBarCloseMouseClicked
        // TODO add your handling code here:
        sideBarTimer.start();
    }//GEN-LAST:event_jlSideBarCloseMouseClicked

    private void jlEncryptionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlEncryptionMouseEntered
        jlEncryption.setOpaque(true);
        jlEncryption.setBackground(new Color(86,61,124));
        jlEncryption.setForeground(Color.white);
    }//GEN-LAST:event_jlEncryptionMouseEntered

    private void jlEncryptionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlEncryptionMouseExited
        jlEncryption.setOpaque(false);
        jlEncryption.setBackground(Color.white);
        jlEncryption.setForeground(new Color(86,61,124));
    }//GEN-LAST:event_jlEncryptionMouseExited

    private void jlEncryptionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlEncryptionMousePressed
        EncryptionPage encryption = new EncryptionPage();
        encryption.setLocation(this.getX(),this.getY());
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        encryption.setVisible(true);
    }//GEN-LAST:event_jlEncryptionMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompressionPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompressionPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompressionPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompressionPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompressionPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JButton jbBrowse;
    private javax.swing.JButton jbDecrypt;
    private javax.swing.JButton jbEncrypt;
    private javax.swing.JLabel jlBlur;
    private javax.swing.JLabel jlCross;
    private javax.swing.JLabel jlEncryption;
    private javax.swing.JLabel jlSideBar;
    private javax.swing.JLabel jlSideBarClose;
    private javax.swing.JLabel jlStatistics;
    private javax.swing.JPanel jpSideBar;
    private javax.swing.JSeparator jsBrowse;
    private javax.swing.JTextField jtfBrowse;
    // End of variables declaration//GEN-END:variables
    private int selectedCategory = SIMPLE;
    private Timer loadingTimer,sideBarTimer = null;
    private Encrypting loadingPanel = null;
    private int x,y;
    private EventHandling eventHandling = null;
    private boolean isSideBarOpen = false;
    private FileDrop fileDrop = null;
    private File selectedFile = null;
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package components;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JTextField;
import jiconfont.IconCode;
import jiconfont.icons.Elusive;
import jiconfont.icons.Entypo;
import jiconfont.icons.FontAwesome;
import jiconfont.icons.GoogleMaterialDesignIcons;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author gauravpunjabi
 */
public class CustomTextField extends javax.swing.JPanel {

    /**
     * Creates new form CustomTextField
     */
    public static int EMAIL_TEXT_FIELD = 0;
    public static int PASSWORD_TEXT_FIELD = 1;
    public CustomTextField() {
        this(EMAIL_TEXT_FIELD,"",FontAwesome.SNAPCHAT_GHOST);
    }
    public CustomTextField(int textFieldType,String placeHolder,IconCode iconCode)
    {
        initComponents();
        this.textFieldType = textFieldType;
        this.placeHolder = placeHolder;
        this.iconCode = iconCode;
        iconSize = 32;
        iconColor = Color.black;
        separatorColor = Color.black;
        textField.setText(placeHolder);
        IconFontSwing.register(FontAwesome.getIconFont());
        IconFontSwing.register(GoogleMaterialDesignIcons.getIconFont());
        IconFontSwing.register(Elusive.getIconFont());
        IconFontSwing.register(Entypo.getIconFont());
        initIcon();
    }
    private void initIcon()
    {
        icon = IconFontSwing.buildIcon(iconCode, iconSize, iconColor);
        jlIcon.setIcon(icon);
    }
    public void setJlIcon(JLabel jlIcon) {
        this.jlIcon = jlIcon;
    }

    public void setTextField(JTextField textField) {
        this.textField = textField;
    }

    public void setSeparatorColor(Color separatorColor) {
        this.separatorColor = separatorColor;
        horizontalSeparator.setForeground(separatorColor);
        horizontalSeparator.setBackground(separatorColor);
    }

    public void setIconColor(Color iconColor) {
        this.iconColor = iconColor;
        initIcon();
    }

    public void setIcon(Icon icon) {
        this.icon = icon;
    }

    public void setIconCode(IconCode iconCode) {
        this.iconCode = iconCode;
        initIcon();
    }

    public void setIconSize(int iconSize) {
        this.iconSize = iconSize;
        initIcon();
    }

    public void setTextFieldType(int textFieldType) {
        this.textFieldType = textFieldType;
    }

    public void setPlaceHolder(String placeHolder) {
        this.placeHolder = placeHolder;
    }
    
    //To simply add  a line in the textField that acts like a seperator
    @Override
    protected void paintComponent(Graphics g)
    {
        g.setColor(separatorColor);
        g.fillRect(0,getHeight()-5,getWidth(),5);
        super.paintComponent(g);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jlIcon = new javax.swing.JLabel();
        textField = new javax.swing.JTextField(){
        };
        horizontalSeparator = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        textField.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        textField.setText("Enter your email id : ");
        textField.setBorder(null);
        textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldFocusLost(evt);
            }
        });
        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jlIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
            .addComponent(horizontalSeparator)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jlIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horizontalSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public JLabel getJlIcon() {
        return jlIcon;
    }

    public JTextField getTextField() {
        return textField;
    }

    public Color getSeparatorColor() {
        return separatorColor;
    }

    public Color getIconColor() {
        return iconColor;
    }

    public Icon getIcon() {
        return icon;
    }

    public IconCode getIconCode() {
        return iconCode;
    }

    public int getIconSize() {
        return iconSize;
    }

    public int getTextFieldType() {
        return textFieldType;
    }

    public String getPlaceHolder() {
        return placeHolder;
    }

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldActionPerformed

    private void textFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldFocusGained
        if(textFieldType == EMAIL_TEXT_FIELD && textField.getText().equals(placeHolder))
            textField.setText("");
    }//GEN-LAST:event_textFieldFocusGained

    private void textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldFocusLost
        if(textField.getText().length() == 0)
            textField.setText(placeHolder);
    }//GEN-LAST:event_textFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator horizontalSeparator;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlIcon;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
    private Color separatorColor,iconColor;
    private Icon icon;
    private IconCode iconCode;
    private int iconSize,textFieldType;
    private String placeHolder;
}
